name: Backend CI

on:
  push:
    branches: ["main", "feature/**"]
    paths:
      - "**/*.py"
  pull_request:
    branches: ["main"]
    paths:
      - "**/*.py"

jobs:
  lint-format-test:
    name: Lint, Format, and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/ci-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install CI dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/ci-requirements.txt

      - name: Lint and format code with Ruff
        run: |
          ruff format .
          ruff check . --fix

      - name: Lint code with Flake8
        run: flake8 .

      - name: Lint YAML files with Yamllint
        run: yamllint -c .yamllint .

      - name: Run Python tests
        run: pytest --cov=src

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  build-docker-image:
    name: Build and Push Docker Image
    needs: lint-format-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: myapp:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
